1.
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
struct Student {
    int rollNo;
    char name[50];
    char course[50];
    int marks;
};
void writeToFile(struct Student students[], int n) {
    FILE *file = fopen("student_records.dat", "wb");
    if (file == NULL) {
        printf("Error opening file!\n");
        return;
    }
    fwrite(students, sizeof(struct Student), n, file);
    fclose(file);
}

void searchByRollNo(int rollNo) {
    FILE *file = fopen("student_records.dat", "rb");
    if (file == NULL) {
        printf("Error opening file!\n");
        return;
    }

    struct Student student;
    int found = 0;
    while (fread(&student, sizeof(struct Student), 1, file)) {
        if (student.rollNo == rollNo) {
            printf("Student Found:\n");
            printf("Roll No: %d\n", student.rollNo);
            printf("Name: %s\n", student.name);
            printf("Course: %s\n", student.course);
            printf("Marks: %d\n", student.marks);
            found = 1;
            break;
        }
    }

    if (!found) {
        printf("Student with Roll No %d not found!\n", rollNo);
    }

    fclose(file);
}

int main() {
    int n;

    printf("Enter number of students: ");
    scanf("%d", &n);

    struct Student students[n];

    for (int i = 0; i < n; i++) {
        printf("Student %d: ", i + 1);
        printf("Enter Roll No, Name, Course, Marks: ");
        scanf("%d %s %s %d", &students[i].rollNo, students[i].name, students[i].course, &students[i].marks);
    
    writeToFile(students, n);

    int rollNo;
    printf("\nEnter Roll No to search: ");
    scanf("%d", &rollNo);

    searchByRollNo(rollNo);

    return 0;
}


2.
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
struct Order {
    int orderId;
    char customerName[50];
    char product[50];
    float amount;
};

void writeToFile(struct Order orders[], int n) {
    FILE *file = fopen("order_records.dat", "wb");
    if (file == NULL) {
        printf("Error opening file!\n");
        return;
    }
    fwrite(orders, sizeof(struct Order), n, file);
    fclose(file);
}

void searchByOrderId(int orderId) {
    FILE *file = fopen("order_records.dat", "rb");
    if (file == NULL) {
        printf("Error opening file!\n");
        return;
    }

    struct Order order;
    int found = 0;
    while (fread(&order, sizeof(struct Order), 1, file)) {
        if (order.orderId == orderId) {
            printf("Order Found:\n");
            printf("Order ID: %d\n", order.orderId);
            printf("Customer Name: %s\n", order.customerName);
            printf("Product: %s\n", order.product);
            printf("Amount: ₹%.2f\n", order.amount);
            found = 1;
            break;
        }
    }

    if (!found) {
        printf("Order with Order ID %d not found!\n", orderId);
    }

    fclose(file);
}

int main() {
    int n;
    printf("Enter number of orders: ");
    scanf("%d", &n);

    struct Order orders[n];

    for (int i = 0; i < n; i++) {
        printf("Order %d: ", i + 1);
        printf("Enter Order ID, Customer Name, Product, Amount: ");
        scanf("%d %s %s %f", &orders[i].orderId, orders[i].customerName, orders[i].product, &orders[i].amount);
    }

    writeToFile(orders, n);

    int orderId;
    printf("\nEnter Order ID to search: ");
    scanf("%d", &orderId);

    searchByOrderId(orderId);

    return 0;
}

3.
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

struct Weather {
    char cityName[50];
    int temperature;  
    int humidity;     
};

void writeToFile(struct Weather weatherRecords[], int n) {
    FILE *file = fopen("weather_data.dat", "wb");
    if (file == NULL) {
        printf("Error opening file!\n");
        return;
    }
    fwrite(weatherRecords, sizeof(struct Weather), n, file);
    fclose(file);
}

void searchByCityName(const char *cityName) {
    FILE *file = fopen("weather_data.dat", "rb");
    if (file == NULL) {
        printf("Error opening file!\n");
        return;
    }

    struct Weather weather;
    int found = 0;
    while (fread(&weather, sizeof(struct Weather), 1, file)) {
        if (strcmp(weather.cityName, cityName) == 0) {
            printf("Weather details for %s:\n", weather.cityName);
            printf("Temperature: %d°C\n", weather.temperature);
            printf("Humidity: %d%%\n", weather.humidity);
            found = 1;
            break;
        }
    }

    if (!found) {
        printf("Weather data for city '%s' not found!\n", cityName);
    }

    fclose(file);
}

int main() {
    int n;

    printf("Enter number of cities: ");
    scanf("%d", &n);

    struct Weather weatherRecords[n];

    for (int i = 0; i < n; i++) {
        printf("City %d: ", i + 1);
        printf("Enter City Name, Temperature (in °C), Humidity (in %%): ");
        scanf("%s %d %d", weatherRecords[i].cityName, &weatherRecords[i].temperature, &weatherRecords[i].humidity);
    }

    writeToFile(weatherRecords, n);

    char cityName[50];
    printf("\nEnter city name to search: ");
    scanf("%s", cityName);

    searchByCityName(cityName);

    return 0;
}



